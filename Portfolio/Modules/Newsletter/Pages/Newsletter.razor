@page "/newsletter"
@using Portfolio.Modules.Newsletter.Models

@inject Portfolio.INewsletterService _newsletterService
@inject NavigationManager NavigationManager

<div class="vh-100 d-flex align-items-center justify-content-center gap-3">
    <div class="container-body vh-100 align-items-center justify-content-center gap-3">
        @if(Newsletters == null)
        {
            <p>Carregando...</p>
        }
        else if(Newsletters.Count == 0)
        {
            <h2>Nenhum item encontrado</h2>
        }
        else
        {
            @foreach (var item in Newsletters)
            {
                <div @onclick="@(() => NavigateDetailPage(item.Url))" class="bg-body-secondary" style=" margin-left: 10%; margin-right: 10%;border-radius: 10px; margin-bottom: 15px; cursor: pointer;">
                    <img src="@item.CoverImage" style=" max-width: 100%; height: auto;  object-fit: cover; "/>
                    <div style="padding: 15px;">
                        <div class="position-horizontal" style="margin-bottom: 10px;">
                            <div style="width: 50px; border-radius: 25px;">
                                <img src="@item.User.ProfileImage" style="width: 50px; border-radius: 25px;"/>
                            </div>
                            <div style="margin-Left: 10px;">
                                <p style="margin-bottom: 0px;">@item.User.Name</p>
                                <p style="margin-bottom: 0px;">@item.PublishedAt.ToString("dd MMM")</p>
                            </div>
                        </div>
                        <h2>@item.Title</h2>
                        <p style="margin-bottom: 0px;">@item.Description</p>
                        <div class="position-horizontal">
                            @foreach (var tag in item.TagList)
                            {
                                <div class="position-horizontal" style="padding-right: 10px;">
                                    <p class="primary-color">#</p>
                                    <p>@tag</p>
                                </div>
                            }
                        </div>
                        <div class="position-horizontal" style="justify-content: space-between;">
                            <div class="position-horizontal">
                                <div class="position-horizontal" style="padding-right: 10px;">
                                    <i class="bi bi-heart-fill primary-color" style="padding-right: 5px;"></i>
                                    <p>@item.PublicReactionsCount reações</p>
                                </div>
                                <div class="position-horizontal">
                                    <i class="bi bi-chat-fill primary-color" style="padding-right: 5px;"></i>
                                    <p>@item.CommentsCount comentários</p>
                                </div>
                            </div>
                            <div class="position-horizontal" style="justify-content: flex-end; padding-right: 10px;">
                                <p>@item.ReadingTimeMinutes min de leitura</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code
{
    List<ArticleModel> Newsletters;

    protected override async Task OnInitializedAsync()
        => await GetNewslettersAsync();

    private async Task GetNewslettersAsync()
        => Newsletters = await _newsletterService.GetAticlesMock();

    private void NavigateDetailPage(string externalUrl)
    { 
        NavigationManager.NavigateTo(externalUrl, forceLoad: true);
    }
}